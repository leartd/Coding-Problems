/**
 * Created by Leart Doko on 10/22/2015.
 */
public class Problem8 {
    public static void main(String[] args) {
        String l = "731671765313306249192251196744265747423553491949349698352"
                + "0312774506326239578318016984801869478851843858615607891129"
                + "4949545950173795833195285320880551112540698747158523863050"
                + "7156932909632952274430435576689664895044524452316173185640"
                + "3098711121722383113622298934233803081353362766142828064444"
                + "8664523874930358907296290491560440772390713810515859307960"
                + "8667017242712188399879790879227492190169972088809377665727"
                + "3330010533678812202354218097512545405947522435258490771167"
                + "0556013604839586446706324415722155397536978179778461740649"
                + "5514929086256932197846862248283972241375657056057490261407"
                + "9729686524145351004748216637048440319989000889524345065854"
                + "1227588666881164271714799244429282308634656748139191231628"
                + "2458617866458359124566529476545682848912883142607690042242"
                + "1902267105562632111110937054421750694165896040807198403850"
                + "9624554443629812309878799272442849091888458015616609791913"
                + "3875499200524063689912560717606058861164671094050775410022"
                + "5698315520005593572972571636269561882670428252483600823257530420752963450";
        int[] arr = new int[l.length()];
        for (int i = 0; i < l.length(); i++) {
            arr[i] = l.charAt(i) - 48;
        }
        long max = 0;

        for (int i = 12; i < arr.length; i++) {
            long temp = 1;
            for (int j = i - 12; j <= i; j++) {
                temp *= arr[j];
            }
            if (temp > max)
                max = temp;
        }
        System.out.println(max);
    }
}
